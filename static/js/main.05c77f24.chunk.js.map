{"version":3,"sources":["components/Loader/Navigation/Navigation.tsx","components/Loader/Loader.tsx","api.ts","components/Loader/Person/Person.tsx","components/Loader/People/People.tsx","App.tsx","index.tsx"],"names":["Navigation","_jsx","className","role","children","_jsxs","NavLink","_ref","isActive","classNames","to","_ref2","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","Link","sex","concat","slug","name","People","_useState","useState","_useState2","_slicedToArray","listPeople","setListPeople","_useState3","_useState4","error","setError","_useParams$slug","useParams","useEffect","res","catch","getParent","find","el","fatherName","emptyName","motherName","createSlug","parent","filter","replaceAll","born","length","_Fragment","map","toLowerCase","includes","died","App","Routes","Route","path","element","Navigate","replace","index","createRoot","document","getElementById","render","Router"],"mappings":"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","file":"static/js/main.05c77f24.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navigation: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={({ isActive }) => classNames(\n            'navbar-item', { 'has-background-grey-lighter': isActive },\n          )}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          className={({ isActive }) => classNames(\n            'navbar-item', { 'has-background-grey-lighter': isActive },\n          )}\n          to=\"/people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../../types/Person';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <td>\n    <Link\n      className={classNames('', {\n        'has-text-danger': person.sex === 'f',\n      })}\n      to={`#/people/${person.slug}`}\n    >\n      {person.name}\n    </Link>\n  </td>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Loader } from '../Loader';\nimport { Person } from '../../../types';\nimport { getPeople } from '../../../api';\nimport { PersonLink } from '../Person/Person';\n\nexport const People: React.FC = () => {\n  const [listPeople, setListPeople] = useState<Person[]>([]);\n  const [error, setError] = useState(false);\n  const { slug = '' } = useParams();\n\n  useEffect(() => {\n    getPeople()\n      .then((res: Person[]) => setListPeople(res))\n      .catch(() => setError(true));\n  }, []);\n\n  const getParent = (person: Person) => {\n    return listPeople\n      .find(\n        (el: Person) => el.name === person.fatherName,\n      );\n  };\n\n  const isActive = (name: string) => {\n    return slug.replaceAll('-', ' ').toLowerCase().includes(name.toLowerCase());\n  };\n\n  const emptyName = (person: Person) => {\n    return person.motherName || '-';\n  };\n\n  const createSlug = (name: string) => {\n    const parent = listPeople.filter((el: Person) => el.name === name)[0];\n\n    return parent\n      ? `/people/${parent.name.replaceAll(' ', '-')}-${parent.born}`\n      : '';\n  };\n\n  return (\n    <div className=\"block\">\n      <h2 className=\"title\">People Page</h2>\n      <div className=\"box table-container\">\n        {!listPeople.length && !error\n          ? <Loader />\n          : (\n            <>\n              {error && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              )}\n\n              {!error && !listPeople.length\n                && (\n                  <p data-cy=\"noPeopleMessage\">\n                    There are no people on the server\n                  </p>\n                )}\n\n              {listPeople.length\n                && (\n                  <table\n                    data-cy=\"peopleTable\"\n                    className=\"\n                    table is-striped\n                    is-hoverable is-narrow is-fullwidth\"\n                  >\n                    <thead>\n                      <tr>\n                        <th>Name</th>\n                        <th>Sex</th>\n                        <th>Born</th>\n                        <th>Died</th>\n                        <th>Mother</th>\n                        <th>Father</th>\n                      </tr>\n                    </thead>\n\n                    <tbody>\n                      {listPeople.map((person: Person) => (\n                        <tr\n                          data-cy=\"person\"\n                          className={classNames('', {\n                            'has-background-warning':\n                              isActive(person.name),\n                          })}\n                          key={person.slug}\n                        >\n                          <PersonLink person={person} />\n\n                          <td>{person.sex}</td>\n                          <td>{person.born}</td>\n                          <td>{person.died}</td>\n                          <td>\n                            {getParent(person) ? (\n                              <Link\n                                className=\"has-text-danger\"\n                                to={\n                                  createSlug(\n                                    person.motherName as string,\n                                  )\n                                }\n                              >\n                                {person.motherName}\n                              </Link>\n                            ) : emptyName(person)}\n\n                          </td>\n                          <td>\n                            {getParent(person) ? (\n                              <Link to={\n                                createSlug(\n                                  person.fatherName as string,\n                                )\n                              }\n                              >\n                                {person.fatherName}\n                              </Link>\n                            ) : emptyName(person)}\n\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                )}\n            </>\n          )}\n      </div>\n    </div>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { Navigation } from './components/Loader/Navigation/Navigation';\nimport { People } from './components/Loader/People/People';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n          <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/people\">\n            <Route index element={<People />} />\n            <Route path=\":slug\" element={<People />} />\n          </Route>\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}